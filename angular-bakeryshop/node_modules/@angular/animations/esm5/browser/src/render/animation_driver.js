import * as tslib_1 from "tslib";
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { NoopAnimationPlayer } from '@angular/animations';
import { Injectable } from '@angular/core';
import { containsElement, invokeQuery, matchesElement, validateStyleProperty } from './shared';
/**
 * @publicApi
 */
import * as ɵngcc0 from '@angular/core';
var NoopAnimationDriver = /** @class */ (function () {
    function NoopAnimationDriver() {
    }
    NoopAnimationDriver.prototype.validateStyleProperty = function (prop) { return validateStyleProperty(prop); };
    NoopAnimationDriver.prototype.matchesElement = function (element, selector) {
        return matchesElement(element, selector);
    };
    NoopAnimationDriver.prototype.containsElement = function (elm1, elm2) { return containsElement(elm1, elm2); };
    NoopAnimationDriver.prototype.query = function (element, selector, multi) {
        return invokeQuery(element, selector, multi);
    };
    NoopAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {
        return defaultValue || '';
    };
    NoopAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers, scrubberAccessRequested) {
        if (previousPlayers === void 0) { previousPlayers = []; }
        return new NoopAnimationPlayer(duration, delay);
    };
NoopAnimationDriver.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NoopAnimationDriver, factory: function NoopAnimationDriver_Factory(t) { return new (t || NoopAnimationDriver)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NoopAnimationDriver, [{
        type: Injectable
    }], function () { return []; }, { validateStyleProperty: [], matchesElement: [], containsElement: [], query: [], computeStyle: [], animate: [] });
    return NoopAnimationDriver;
}());
export { NoopAnimationDriver };
/**
 * @publicApi
 */
var AnimationDriver = /** @class */ (function () {
    function AnimationDriver() {
    }
    AnimationDriver.NOOP = new NoopAnimationDriver();
    return AnimationDriver;
}());
export { AnimationDriver };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3ZhaGVybWloL2tvb2xpdHVzZWQvQW5ndWxhci0wMy0yMDIyL2FuZ3VsYXItYmFrZXJ5c2hvcC9ub2RlX21vZHVsZXMvQGFuZ3VsYXIvYW5pbWF0aW9ucy9lc201L2Jyb3dzZXIvc3JjL3JlbmRlci9hbmltYXRpb25fZHJpdmVyLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7QUFjQTs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFpQk07Ozs7c0pBR3NCIiwiZmlsZSI6ImFuaW1hdGlvbl9kcml2ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0c2xpYl8xIGZyb20gXCJ0c2xpYlwiO1xuLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuaW1wb3J0IHsgTm9vcEFuaW1hdGlvblBsYXllciB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgY29udGFpbnNFbGVtZW50LCBpbnZva2VRdWVyeSwgbWF0Y2hlc0VsZW1lbnQsIHZhbGlkYXRlU3R5bGVQcm9wZXJ0eSB9IGZyb20gJy4vc2hhcmVkJztcbi8qKlxuICogQHB1YmxpY0FwaVxuICovXG52YXIgTm9vcEFuaW1hdGlvbkRyaXZlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBOb29wQW5pbWF0aW9uRHJpdmVyKCkge1xuICAgIH1cbiAgICBOb29wQW5pbWF0aW9uRHJpdmVyLnByb3RvdHlwZS52YWxpZGF0ZVN0eWxlUHJvcGVydHkgPSBmdW5jdGlvbiAocHJvcCkgeyByZXR1cm4gdmFsaWRhdGVTdHlsZVByb3BlcnR5KHByb3ApOyB9O1xuICAgIE5vb3BBbmltYXRpb25Ecml2ZXIucHJvdG90eXBlLm1hdGNoZXNFbGVtZW50ID0gZnVuY3Rpb24gKGVsZW1lbnQsIHNlbGVjdG9yKSB7XG4gICAgICAgIHJldHVybiBtYXRjaGVzRWxlbWVudChlbGVtZW50LCBzZWxlY3Rvcik7XG4gICAgfTtcbiAgICBOb29wQW5pbWF0aW9uRHJpdmVyLnByb3RvdHlwZS5jb250YWluc0VsZW1lbnQgPSBmdW5jdGlvbiAoZWxtMSwgZWxtMikgeyByZXR1cm4gY29udGFpbnNFbGVtZW50KGVsbTEsIGVsbTIpOyB9O1xuICAgIE5vb3BBbmltYXRpb25Ecml2ZXIucHJvdG90eXBlLnF1ZXJ5ID0gZnVuY3Rpb24gKGVsZW1lbnQsIHNlbGVjdG9yLCBtdWx0aSkge1xuICAgICAgICByZXR1cm4gaW52b2tlUXVlcnkoZWxlbWVudCwgc2VsZWN0b3IsIG11bHRpKTtcbiAgICB9O1xuICAgIE5vb3BBbmltYXRpb25Ecml2ZXIucHJvdG90eXBlLmNvbXB1dGVTdHlsZSA9IGZ1bmN0aW9uIChlbGVtZW50LCBwcm9wLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZSB8fCAnJztcbiAgICB9O1xuICAgIE5vb3BBbmltYXRpb25Ecml2ZXIucHJvdG90eXBlLmFuaW1hdGUgPSBmdW5jdGlvbiAoZWxlbWVudCwga2V5ZnJhbWVzLCBkdXJhdGlvbiwgZGVsYXksIGVhc2luZywgcHJldmlvdXNQbGF5ZXJzLCBzY3J1YmJlckFjY2Vzc1JlcXVlc3RlZCkge1xuICAgICAgICBpZiAocHJldmlvdXNQbGF5ZXJzID09PSB2b2lkIDApIHsgcHJldmlvdXNQbGF5ZXJzID0gW107IH1cbiAgICAgICAgcmV0dXJuIG5ldyBOb29wQW5pbWF0aW9uUGxheWVyKGR1cmF0aW9uLCBkZWxheSk7XG4gICAgfTtcbiAgICBOb29wQW5pbWF0aW9uRHJpdmVyID0gdHNsaWJfMS5fX2RlY29yYXRlKFtcbiAgICAgICAgSW5qZWN0YWJsZSgpXG4gICAgXSwgTm9vcEFuaW1hdGlvbkRyaXZlcik7XG4gICAgcmV0dXJuIE5vb3BBbmltYXRpb25Ecml2ZXI7XG59KCkpO1xuZXhwb3J0IHsgTm9vcEFuaW1hdGlvbkRyaXZlciB9O1xuLyoqXG4gKiBAcHVibGljQXBpXG4gKi9cbnZhciBBbmltYXRpb25Ecml2ZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQW5pbWF0aW9uRHJpdmVyKCkge1xuICAgIH1cbiAgICBBbmltYXRpb25Ecml2ZXIuTk9PUCA9IG5ldyBOb29wQW5pbWF0aW9uRHJpdmVyKCk7XG4gICAgcmV0dXJuIEFuaW1hdGlvbkRyaXZlcjtcbn0oKSk7XG5leHBvcnQgeyBBbmltYXRpb25Ecml2ZXIgfTtcbiJdfQ==