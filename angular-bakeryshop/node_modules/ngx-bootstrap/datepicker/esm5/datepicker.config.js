/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var DatepickerConfig = /** @class */ (function () {
    function DatepickerConfig() {
        this.locale = 'en';
        this.datepickerMode = 'day';
        this.startingDay = 0;
        this.yearRange = 20;
        this.minMode = 'day';
        this.maxMode = 'year';
        this.showWeeks = true;
        this.formatDay = 'DD';
        this.formatMonth = 'MMMM';
        this.formatYear = 'YYYY';
        this.formatDayHeader = 'dd';
        this.formatDayTitle = 'MMMM YYYY';
        this.formatMonthTitle = 'YYYY';
        this.onlyCurrentMonth = false;
        this.monthColLimit = 3;
        this.yearColLimit = 5;
        this.shortcutPropagation = false;
    }
DatepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: DatepickerConfig, factory: function DatepickerConfig_Factory(t) { return new (t || DatepickerConfig)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DatepickerConfig, [{
        type: Injectable
    }], function () { return []; }, { locale: [], datepickerMode: [], startingDay: [], yearRange: [], minMode: [], maxMode: [], showWeeks: [], formatDay: [], formatMonth: [], formatYear: [], formatDayHeader: [], formatDayTitle: [], formatMonthTitle: [], onlyCurrentMonth: [], monthColLimit: [], yearColLimit: [], shortcutPropagation: [] });
    return DatepickerConfig;
}());
export { DatepickerConfig };
if (false) {
    /** @type {?} */
    DatepickerConfig.prototype.locale;
    /** @type {?} */
    DatepickerConfig.prototype.datepickerMode;
    /** @type {?} */
    DatepickerConfig.prototype.startingDay;
    /** @type {?} */
    DatepickerConfig.prototype.yearRange;
    /** @type {?} */
    DatepickerConfig.prototype.minMode;
    /** @type {?} */
    DatepickerConfig.prototype.maxMode;
    /** @type {?} */
    DatepickerConfig.prototype.showWeeks;
    /** @type {?} */
    DatepickerConfig.prototype.formatDay;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonth;
    /** @type {?} */
    DatepickerConfig.prototype.formatYear;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayHeader;
    /** @type {?} */
    DatepickerConfig.prototype.formatDayTitle;
    /** @type {?} */
    DatepickerConfig.prototype.formatMonthTitle;
    /** @type {?} */
    DatepickerConfig.prototype.onlyCurrentMonth;
    /** @type {?} */
    DatepickerConfig.prototype.monthColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.yearColLimit;
    /** @type {?} */
    DatepickerConfig.prototype.shortcutPropagation;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3ZhaGVybWloL2tvb2xpdHVzZWQvQW5ndWxhci0wMy0yMDIyL2FuZ3VsYXItYmFrZXJ5c2hvcC9ub2RlX21vZHVsZXMvbmd4LWJvb3RzdHJhcC9kYXRlcGlja2VyL2VzbTUvZGF0ZXBpY2tlci5jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBbUJLOzs7O29WQUdDIiwiZmlsZSI6ImRhdGVwaWNrZXIuY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBEYXRlcGlja2VyQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIERhdGVwaWNrZXJDb25maWcoKSB7XG4gICAgICAgIHRoaXMubG9jYWxlID0gJ2VuJztcbiAgICAgICAgdGhpcy5kYXRlcGlja2VyTW9kZSA9ICdkYXknO1xuICAgICAgICB0aGlzLnN0YXJ0aW5nRGF5ID0gMDtcbiAgICAgICAgdGhpcy55ZWFyUmFuZ2UgPSAyMDtcbiAgICAgICAgdGhpcy5taW5Nb2RlID0gJ2RheSc7XG4gICAgICAgIHRoaXMubWF4TW9kZSA9ICd5ZWFyJztcbiAgICAgICAgdGhpcy5zaG93V2Vla3MgPSB0cnVlO1xuICAgICAgICB0aGlzLmZvcm1hdERheSA9ICdERCc7XG4gICAgICAgIHRoaXMuZm9ybWF0TW9udGggPSAnTU1NTSc7XG4gICAgICAgIHRoaXMuZm9ybWF0WWVhciA9ICdZWVlZJztcbiAgICAgICAgdGhpcy5mb3JtYXREYXlIZWFkZXIgPSAnZGQnO1xuICAgICAgICB0aGlzLmZvcm1hdERheVRpdGxlID0gJ01NTU0gWVlZWSc7XG4gICAgICAgIHRoaXMuZm9ybWF0TW9udGhUaXRsZSA9ICdZWVlZJztcbiAgICAgICAgdGhpcy5vbmx5Q3VycmVudE1vbnRoID0gZmFsc2U7XG4gICAgICAgIHRoaXMubW9udGhDb2xMaW1pdCA9IDM7XG4gICAgICAgIHRoaXMueWVhckNvbExpbWl0ID0gNTtcbiAgICAgICAgdGhpcy5zaG9ydGN1dFByb3BhZ2F0aW9uID0gZmFsc2U7XG4gICAgfVxuICAgIERhdGVwaWNrZXJDb25maWcuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBJbmplY3RhYmxlIH1cbiAgICBdO1xuICAgIHJldHVybiBEYXRlcGlja2VyQ29uZmlnO1xufSgpKTtcbmV4cG9ydCB7IERhdGVwaWNrZXJDb25maWcgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5sb2NhbGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRhdGVwaWNrZXJNb2RlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zdGFydGluZ0RheTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUueWVhclJhbmdlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5taW5Nb2RlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tYXhNb2RlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zaG93V2Vla3M7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZvcm1hdERheTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZm9ybWF0TW9udGg7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZvcm1hdFllYXI7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZvcm1hdERheUhlYWRlcjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZm9ybWF0RGF5VGl0bGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmZvcm1hdE1vbnRoVGl0bGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm9ubHlDdXJyZW50TW9udGg7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1vbnRoQ29sTGltaXQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnllYXJDb2xMaW1pdDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2hvcnRjdXRQcm9wYWdhdGlvbjtcbn1cbiJdfQ==