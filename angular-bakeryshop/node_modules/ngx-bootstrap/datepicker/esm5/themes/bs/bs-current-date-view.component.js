/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

const _c0 = [1, "current-timedate"];
var BsCurrentDateViewComponent = /** @class */ (function () {
    function BsCurrentDateViewComponent() {
    }
    BsCurrentDateViewComponent.propDecorators = {
        title: [{ type: Input }]
    };
BsCurrentDateViewComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: BsCurrentDateViewComponent, selectors: [["bs-current-date"]], factory: function BsCurrentDateViewComponent_Factory(t) { return new (t || BsCurrentDateViewComponent)(); }, inputs: { title: "title" }, consts: 3, vars: 1, template: function BsCurrentDateViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", _c0);
        ɵngcc0.ɵɵelementStart(1, "span");
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵselect(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.title);
    } }, encapsulation: 2 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BsCurrentDateViewComponent, [{
        type: Component,
        args: [{
                selector: 'bs-current-date',
                template: "<div class=\"current-timedate\"><span>{{ title }}</span></div>"
            }]
    }], function () { return []; }, { title: [{
            type: Input
        }] });
    return BsCurrentDateViewComponent;
}());
export { BsCurrentDateViewComponent };
if (false) {
    /** @type {?} */
    BsCurrentDateViewComponent.prototype.title;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3ZhaGVybWloL2tvb2xpdHVzZWQvQW5ndWxhci0wMy0yMDIyL2FuZ3VsYXItYmFrZXJ5c2hvcC9ub2RlX21vZHVsZXMvbmd4LWJvb3RzdHJhcC9kYXRlcGlja2VyL2VzbTUvdGhlbWVzL2JzL2JzLWN1cnJlbnQtZGF0ZS12aWV3LmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFLQTs7S0FFSyxBQU1DOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2NBR0EiLCJmaWxlIjoiYnMtY3VycmVudC1kYXRlLXZpZXcuY29tcG9uZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudCgpIHtcbiAgICB9XG4gICAgQnNDdXJyZW50RGF0ZVZpZXdDb21wb25lbnQuZGVjb3JhdG9ycyA9IFtcbiAgICAgICAgeyB0eXBlOiBDb21wb25lbnQsIGFyZ3M6IFt7XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnYnMtY3VycmVudC1kYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IFwiPGRpdiBjbGFzcz1cXFwiY3VycmVudC10aW1lZGF0ZVxcXCI+PHNwYW4+e3sgdGl0bGUgfX08L3NwYW4+PC9kaXY+XCJcbiAgICAgICAgICAgICAgICB9XSB9XG4gICAgXTtcbiAgICBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICAgICAgdGl0bGU6IFt7IHR5cGU6IElucHV0IH1dXG4gICAgfTtcbiAgICByZXR1cm4gQnNDdXJyZW50RGF0ZVZpZXdDb21wb25lbnQ7XG59KCkpO1xuZXhwb3J0IHsgQnNDdXJyZW50RGF0ZVZpZXdDb21wb25lbnQgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0N1cnJlbnREYXRlVmlld0NvbXBvbmVudC5wcm90b3R5cGUudGl0bGU7XG59XG4iXX0=