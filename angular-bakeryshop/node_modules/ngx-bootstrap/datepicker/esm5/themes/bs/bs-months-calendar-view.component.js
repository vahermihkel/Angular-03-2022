/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { BsNavigationDirection } from '../../models';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './bs-calendar-layout.component';
import * as ɵngcc2 from './bs-datepicker-navigation-view.component';
import * as ɵngcc3 from '@angular/common';

const _c0 = [3, "calendar", "onNavigate", "onViewMode"];
const _c1 = ["role", "grid", 1, "months"];
const _c2 = [4, "ngFor", "ngForOf"];
const _c3 = ["role", "gridcell", 3, "disabled", "is-highlighted", "click", "mouseenter", "mouseleave", 4, "ngFor", "ngForOf"];
const _c4 = ["role", "gridcell", 3, "click", "mouseenter", "mouseleave"];
function BsMonthCalendarViewComponent_tr_4_td_1_Template(rf, ctx) { if (rf & 1) {
    const _r908 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", _c4);
    ɵngcc0.ɵɵstyling();
    ɵngcc0.ɵɵlistener("click", function BsMonthCalendarViewComponent_tr_4_td_1_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r908); const month_r906 = ctx.$implicit; const ctx_r907 = ɵngcc0.ɵɵnextContext(2); return ctx_r907.viewMonth(month_r906); });
    ɵngcc0.ɵɵlistener("mouseenter", function BsMonthCalendarViewComponent_tr_4_td_1_Template_td_mouseenter_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r908); const month_r906 = ctx.$implicit; const ctx_r909 = ɵngcc0.ɵɵnextContext(2); return ctx_r909.hoverMonth(month_r906, true); });
    ɵngcc0.ɵɵlistener("mouseleave", function BsMonthCalendarViewComponent_tr_4_td_1_Template_td_mouseleave_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r908); const month_r906 = ctx.$implicit; const ctx_r910 = ɵngcc0.ɵɵnextContext(2); return ctx_r910.hoverMonth(month_r906, false); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const month_r906 = ctx.$implicit;
    ɵngcc0.ɵɵclassProp("disabled", month_r906.isDisabled);
    ɵngcc0.ɵɵclassProp("is-highlighted", month_r906.isHovered);
    ɵngcc0.ɵɵstylingApply();
    ɵngcc0.ɵɵselect(2);
    ɵngcc0.ɵɵtextInterpolate(month_r906.label);
} }
function BsMonthCalendarViewComponent_tr_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr");
    ɵngcc0.ɵɵtemplate(1, BsMonthCalendarViewComponent_tr_4_td_1_Template, 3, 3, "td", _c3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r904 = ctx.$implicit;
    ɵngcc0.ɵɵselect(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r904);
} }
var BsMonthCalendarViewComponent = /** @class */ (function () {
    function BsMonthCalendarViewComponent() {
        this.onNavigate = new EventEmitter();
        this.onViewMode = new EventEmitter();
        this.onSelect = new EventEmitter();
        this.onHover = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    BsMonthCalendarViewComponent.prototype.navigateTo = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var step = BsNavigationDirection.DOWN === event ? -1 : 1;
        this.onNavigate.emit({ step: { year: step } });
    };
    /**
     * @param {?} month
     * @return {?}
     */
    BsMonthCalendarViewComponent.prototype.viewMonth = /**
     * @param {?} month
     * @return {?}
     */
    function (month) {
        this.onSelect.emit(month);
    };
    /**
     * @param {?} cell
     * @param {?} isHovered
     * @return {?}
     */
    BsMonthCalendarViewComponent.prototype.hoverMonth = /**
     * @param {?} cell
     * @param {?} isHovered
     * @return {?}
     */
    function (cell, isHovered) {
        this.onHover.emit({ cell: cell, isHovered: isHovered });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    BsMonthCalendarViewComponent.prototype.changeViewMode = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onViewMode.emit(event);
    };
    BsMonthCalendarViewComponent.propDecorators = {
        calendar: [{ type: Input }],
        onNavigate: [{ type: Output }],
        onViewMode: [{ type: Output }],
        onSelect: [{ type: Output }],
        onHover: [{ type: Output }]
    };
BsMonthCalendarViewComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: BsMonthCalendarViewComponent, selectors: [["bs-month-calendar-view"]], factory: function BsMonthCalendarViewComponent_Factory(t) { return new (t || BsMonthCalendarViewComponent)(); }, inputs: { calendar: "calendar" }, outputs: { onNavigate: "onNavigate", onViewMode: "onViewMode", onSelect: "onSelect", onHover: "onHover" }, consts: 5, vars: 2, template: function BsMonthCalendarViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "bs-calendar-layout");
        ɵngcc0.ɵɵelementStart(1, "bs-datepicker-navigation-view", _c0);
        ɵngcc0.ɵɵlistener("onNavigate", function BsMonthCalendarViewComponent_Template_bs_datepicker_navigation_view_onNavigate_1_listener($event) { return ctx.navigateTo($event); });
        ɵngcc0.ɵɵlistener("onViewMode", function BsMonthCalendarViewComponent_Template_bs_datepicker_navigation_view_onViewMode_1_listener($event) { return ctx.changeViewMode($event); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "table", _c1);
        ɵngcc0.ɵɵelementStart(3, "tbody");
        ɵngcc0.ɵɵtemplate(4, BsMonthCalendarViewComponent_tr_4_Template, 2, 1, "tr", _c2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵselect(1);
        ɵngcc0.ɵɵproperty("calendar", ctx.calendar);
        ɵngcc0.ɵɵselect(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.calendar.months);
    } }, directives: [ɵngcc1.BsCalendarLayoutComponent, ɵngcc2.BsDatepickerNavigationViewComponent, ɵngcc3.NgForOf], encapsulation: 2 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BsMonthCalendarViewComponent, [{
        type: Component,
        args: [{
                selector: 'bs-month-calendar-view',
                template: "\n    <bs-calendar-layout>\n      <bs-datepicker-navigation-view\n        [calendar]=\"calendar\"\n        (onNavigate)=\"navigateTo($event)\"\n        (onViewMode)=\"changeViewMode($event)\"\n      ></bs-datepicker-navigation-view>\n\n      <table role=\"grid\" class=\"months\">\n        <tbody>\n        <tr *ngFor=\"let row of calendar.months\">\n          <td *ngFor=\"let month of row\" role=\"gridcell\"\n              (click)=\"viewMonth(month)\"\n              (mouseenter)=\"hoverMonth(month, true)\"\n              (mouseleave)=\"hoverMonth(month, false)\"\n              [class.disabled]=\"month.isDisabled\"\n              [class.is-highlighted]=\"month.isHovered\">\n            <span>{{ month.label }}</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </bs-calendar-layout>\n  "
            }]
    }], function () { return []; }, { onNavigate: [{
            type: Output
        }], onViewMode: [{
            type: Output
        }], onSelect: [{
            type: Output
        }], onHover: [{
            type: Output
        }], navigateTo: [], viewMonth: [], hoverMonth: [], changeViewMode: [], calendar: [{
            type: Input
        }] });
    return BsMonthCalendarViewComponent;
}());
export { BsMonthCalendarViewComponent };
if (false) {
    /** @type {?} */
    BsMonthCalendarViewComponent.prototype.calendar;
    /** @type {?} */
    BsMonthCalendarViewComponent.prototype.onNavigate;
    /** @type {?} */
    BsMonthCalendarViewComponent.prototype.onViewMode;
    /** @type {?} */
    BsMonthCalendarViewComponent.prototype.onSelect;
    /** @type {?} */
    BsMonthCalendarViewComponent.prototype.onHover;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3ZhaGVybWloL2tvb2xpdHVzZWQvQW5ndWxhci0wMy0yMDIyL2FuZ3VsYXItYmFrZXJ5c2hvcC9ub2RlX21vZHVsZXMvbmd4LWJvb3RzdHJhcC9kYXRlcGlja2VyL2VzbTUvdGhlbWVzL2JzL2JzLW1vbnRocy1jYWxlbmRhci12aWV3LmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01Bc0RNLEFBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztjQU9BIiwiZmlsZSI6ImJzLW1vbnRocy1jYWxlbmRhci12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNOYXZpZ2F0aW9uRGlyZWN0aW9uIH0gZnJvbSAnLi4vLi4vbW9kZWxzJztcbnZhciBCc01vbnRoQ2FsZW5kYXJWaWV3Q29tcG9uZW50ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQoKSB7XG4gICAgICAgIHRoaXMub25OYXZpZ2F0ZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5vblZpZXdNb2RlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm9uU2VsZWN0ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLm9uSG92ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gZXZlbnRcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLm5hdmlnYXRlVG8gPSAvKipcbiAgICAgKiBAcGFyYW0gez99IGV2ZW50XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgICAgICB2YXIgc3RlcCA9IEJzTmF2aWdhdGlvbkRpcmVjdGlvbi5ET1dOID09PSBldmVudCA/IC0xIDogMTtcbiAgICAgICAgdGhpcy5vbk5hdmlnYXRlLmVtaXQoeyBzdGVwOiB7IHllYXI6IHN0ZXAgfSB9KTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gbW9udGhcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLnZpZXdNb250aCA9IC8qKlxuICAgICAqIEBwYXJhbSB7P30gbW9udGhcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIChtb250aCkge1xuICAgICAgICB0aGlzLm9uU2VsZWN0LmVtaXQobW9udGgpO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBjZWxsXG4gICAgICogQHBhcmFtIHs/fSBpc0hvdmVyZWRcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLmhvdmVyTW9udGggPSAvKipcbiAgICAgKiBAcGFyYW0gez99IGNlbGxcbiAgICAgKiBAcGFyYW0gez99IGlzSG92ZXJlZFxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgZnVuY3Rpb24gKGNlbGwsIGlzSG92ZXJlZCkge1xuICAgICAgICB0aGlzLm9uSG92ZXIuZW1pdCh7IGNlbGw6IGNlbGwsIGlzSG92ZXJlZDogaXNIb3ZlcmVkIH0pO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBldmVudFxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgQnNNb250aENhbGVuZGFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuY2hhbmdlVmlld01vZGUgPSAvKipcbiAgICAgKiBAcGFyYW0gez99IGV2ZW50XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5vblZpZXdNb2RlLmVtaXQoZXZlbnQpO1xuICAgIH07XG4gICAgQnNNb250aENhbGVuZGFyVmlld0NvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IENvbXBvbmVudCwgYXJnczogW3tcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICdicy1tb250aC1jYWxlbmRhci12aWV3JyxcbiAgICAgICAgICAgICAgICAgICAgdGVtcGxhdGU6IFwiXFxuICAgIDxicy1jYWxlbmRhci1sYXlvdXQ+XFxuICAgICAgPGJzLWRhdGVwaWNrZXItbmF2aWdhdGlvbi12aWV3XFxuICAgICAgICBbY2FsZW5kYXJdPVxcXCJjYWxlbmRhclxcXCJcXG4gICAgICAgIChvbk5hdmlnYXRlKT1cXFwibmF2aWdhdGVUbygkZXZlbnQpXFxcIlxcbiAgICAgICAgKG9uVmlld01vZGUpPVxcXCJjaGFuZ2VWaWV3TW9kZSgkZXZlbnQpXFxcIlxcbiAgICAgID48L2JzLWRhdGVwaWNrZXItbmF2aWdhdGlvbi12aWV3PlxcblxcbiAgICAgIDx0YWJsZSByb2xlPVxcXCJncmlkXFxcIiBjbGFzcz1cXFwibW9udGhzXFxcIj5cXG4gICAgICAgIDx0Ym9keT5cXG4gICAgICAgIDx0ciAqbmdGb3I9XFxcImxldCByb3cgb2YgY2FsZW5kYXIubW9udGhzXFxcIj5cXG4gICAgICAgICAgPHRkICpuZ0Zvcj1cXFwibGV0IG1vbnRoIG9mIHJvd1xcXCIgcm9sZT1cXFwiZ3JpZGNlbGxcXFwiXFxuICAgICAgICAgICAgICAoY2xpY2spPVxcXCJ2aWV3TW9udGgobW9udGgpXFxcIlxcbiAgICAgICAgICAgICAgKG1vdXNlZW50ZXIpPVxcXCJob3Zlck1vbnRoKG1vbnRoLCB0cnVlKVxcXCJcXG4gICAgICAgICAgICAgIChtb3VzZWxlYXZlKT1cXFwiaG92ZXJNb250aChtb250aCwgZmFsc2UpXFxcIlxcbiAgICAgICAgICAgICAgW2NsYXNzLmRpc2FibGVkXT1cXFwibW9udGguaXNEaXNhYmxlZFxcXCJcXG4gICAgICAgICAgICAgIFtjbGFzcy5pcy1oaWdobGlnaHRlZF09XFxcIm1vbnRoLmlzSG92ZXJlZFxcXCI+XFxuICAgICAgICAgICAgPHNwYW4+e3sgbW9udGgubGFiZWwgfX08L3NwYW4+XFxuICAgICAgICAgIDwvdGQ+XFxuICAgICAgICA8L3RyPlxcbiAgICAgICAgPC90Ym9keT5cXG4gICAgICA8L3RhYmxlPlxcbiAgICA8L2JzLWNhbGVuZGFyLWxheW91dD5cXG4gIFwiXG4gICAgICAgICAgICAgICAgfV0gfVxuICAgIF07XG4gICAgQnNNb250aENhbGVuZGFyVmlld0NvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICAgICAgY2FsZW5kYXI6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgICAgICBvbk5hdmlnYXRlOiBbeyB0eXBlOiBPdXRwdXQgfV0sXG4gICAgICAgIG9uVmlld01vZGU6IFt7IHR5cGU6IE91dHB1dCB9XSxcbiAgICAgICAgb25TZWxlY3Q6IFt7IHR5cGU6IE91dHB1dCB9XSxcbiAgICAgICAgb25Ib3ZlcjogW3sgdHlwZTogT3V0cHV0IH1dXG4gICAgfTtcbiAgICByZXR1cm4gQnNNb250aENhbGVuZGFyVmlld0NvbXBvbmVudDtcbn0oKSk7XG5leHBvcnQgeyBCc01vbnRoQ2FsZW5kYXJWaWV3Q29tcG9uZW50IH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNNb250aENhbGVuZGFyVmlld0NvbXBvbmVudC5wcm90b3R5cGUuY2FsZW5kYXI7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLm9uTmF2aWdhdGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLm9uVmlld01vZGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzTW9udGhDYWxlbmRhclZpZXdDb21wb25lbnQucHJvdG90eXBlLm9uU2VsZWN0O1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc01vbnRoQ2FsZW5kYXJWaWV3Q29tcG9uZW50LnByb3RvdHlwZS5vbkhvdmVyO1xufVxuIl19