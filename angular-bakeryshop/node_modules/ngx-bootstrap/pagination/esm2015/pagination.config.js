/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// todo: split
import { Injectable } from '@angular/core';
/**
 * Provides default values for Pagination and pager components
 */
import * as ɵngcc0 from '@angular/core';
export class PaginationConfig {
    constructor() {
        this.main = {
            maxSize: void 0,
            itemsPerPage: 10,
            boundaryLinks: false,
            directionLinks: true,
            firstText: 'First',
            previousText: 'Previous',
            nextText: 'Next',
            lastText: 'Last',
            pageBtnClass: '',
            rotate: true
        };
        this.pager = {
            itemsPerPage: 15,
            previousText: '« Previous',
            nextText: 'Next »',
            pageBtnClass: '',
            align: true
        };
    }
}
PaginationConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: PaginationConfig, factory: function PaginationConfig_Factory(t) { return new (t || PaginationConfig)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(PaginationConfig, [{
        type: Injectable
    }], function () { return []; }, { constructor: [], main: [], pager: [] });
if (false) {
    /** @type {?} */
    PaginationConfig.prototype.main;
    /** @type {?} */
    PaginationConfig.prototype.pager;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL3ZhaGVybWloL2tvb2xpdHVzZWQvQW5ndWxhci0wMy0yMDIyL2FuZ3VsYXItYmFrZXJ5c2hvcC9ub2RlX21vZHVsZXMvbmd4LWJvb3RzdHJhcC9wYWdpbmF0aW9uL2VzbTIwMTUvcGFnaW5hdGlvbi5jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FzQkMsNkVBR0MiLCJmaWxlIjoicGFnaW5hdGlvbi5jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuLy8gdG9kbzogc3BsaXRcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8qKlxuICogUHJvdmlkZXMgZGVmYXVsdCB2YWx1ZXMgZm9yIFBhZ2luYXRpb24gYW5kIHBhZ2VyIGNvbXBvbmVudHNcbiAqL1xuZXhwb3J0IGNsYXNzIFBhZ2luYXRpb25Db25maWcge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm1haW4gPSB7XG4gICAgICAgICAgICBtYXhTaXplOiB2b2lkIDAsXG4gICAgICAgICAgICBpdGVtc1BlclBhZ2U6IDEwLFxuICAgICAgICAgICAgYm91bmRhcnlMaW5rczogZmFsc2UsXG4gICAgICAgICAgICBkaXJlY3Rpb25MaW5rczogdHJ1ZSxcbiAgICAgICAgICAgIGZpcnN0VGV4dDogJ0ZpcnN0JyxcbiAgICAgICAgICAgIHByZXZpb3VzVGV4dDogJ1ByZXZpb3VzJyxcbiAgICAgICAgICAgIG5leHRUZXh0OiAnTmV4dCcsXG4gICAgICAgICAgICBsYXN0VGV4dDogJ0xhc3QnLFxuICAgICAgICAgICAgcGFnZUJ0bkNsYXNzOiAnJyxcbiAgICAgICAgICAgIHJvdGF0ZTogdHJ1ZVxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnBhZ2VyID0ge1xuICAgICAgICAgICAgaXRlbXNQZXJQYWdlOiAxNSxcbiAgICAgICAgICAgIHByZXZpb3VzVGV4dDogJ8KrIFByZXZpb3VzJyxcbiAgICAgICAgICAgIG5leHRUZXh0OiAnTmV4dCDCuycsXG4gICAgICAgICAgICBwYWdlQnRuQ2xhc3M6ICcnLFxuICAgICAgICAgICAgYWxpZ246IHRydWVcbiAgICAgICAgfTtcbiAgICB9XG59XG5QYWdpbmF0aW9uQ29uZmlnLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBJbmplY3RhYmxlIH1cbl07XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgUGFnaW5hdGlvbkNvbmZpZy5wcm90b3R5cGUubWFpbjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgUGFnaW5hdGlvbkNvbmZpZy5wcm90b3R5cGUucGFnZXI7XG59XG4iXX0=